import datetime
import time

from ai_handler import ai_generate_answer
import gradio as gr
from config import settings
from common import generate_filename
import threading


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
def greet_and_upload(image):
    yield "### üíæ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —É–º–µ–Ω—å—à–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    max_size = 1000
    width, height = image.size
    if width > max_size or height > max_size:
        if width > height:
            new_width = max_size
            new_height = int((max_size / width) * height)
        else:
            new_height = max_size
            new_width = int((max_size / height) * width)

        image = image.resize((new_width, new_height))

    filename = generate_filename(8) + '.jpg'
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPEG
    save_path = f"./images/{filename}"
    image.save(save_path, "JPEG")

    # –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é OpenAI
    time.sleep(0.5)
    yield "### ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."
    image_description = ai_generate_answer(f'{settings.API_URL}/{filename}')
    image_description += f'\nhttp://{settings.API_URL}/{filename}'

    try:
        with open('./descriptions_logs.txt', 'r+') as f:
            f.read()
            f.write(f'\n{datetime.datetime.now()}\n{image_description}')
    except Exception as e:
        print(e)
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–∑—É –æ–±–Ω–æ–≤–∏—Ç—Å—è
    return image_description


def gradio_main():
    # –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫–∏ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
    with gr.Blocks() as iface:
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        gr.Markdown("### –ü—Ä–∏–≤–µ—Ç! –ó–∞–≥—Ä—É–∑–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —è –ø–æ–∫–∞–∂—É –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—é ü™Ñ‚ú®")

        # –í–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_input = gr.Image(type="pil", label="–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")

        # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        final_message_output = gr.Markdown("### –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç üí´")

        # –°–æ–µ–¥–∏–Ω—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å —Ñ—É–Ω–∫—Ü–∏–µ–π
        image_input.change(fn=greet_and_upload, inputs=image_input, outputs=final_message_output, show_progress='minimal')

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    iface.launch(max_file_size='6mb', server_name='0.0.0.0', server_port=7861)


gradio_main()